!function(){"use strict";function e(e){let t=document.querySelector(`.product[data-id="${e}"]`);if(!t)return console.warn(`Product with ID ${e} not found`),null;let i=t.querySelector("td:first-child"),n=i?i.textContent.trim():"";return window.cartConfig.debugMode&&console.log(`📦 Product ${e} found:`,n),{id:e,name:n}}function t(e){let t=e.toFixed(window.cartConfig.currency.decimalPlaces);return"before"===window.cartConfig.currency.position?`${window.cartConfig.currency.symbol}${t}`:`${t}${window.cartConfig.currency.symbol}`}function i(e){return e}function n(e,t){return e-t}function r(e,i){var n,r;let o=(n=i.originalPrice,n-(r=i.discountedPrice)),a=i.savingsText.replace("{amount}",t(o)),c={"{productName}":{value:i.productName,class:"bump-product-name"},"{oldPrice}":{value:t(i.originalPrice),class:"bump-price-old"},"{newPrice}":{value:t(i.discountedPrice),class:"bump-price-new"},"{savings}":{value:a,class:"bump-save"}},d=e;return Object.entries(c).forEach(([e,t])=>{let i=RegExp(e.replace(/[{}]/g,"\\$&"),"gi");d=d.replace(i,`<span class="${t.class}">${t.value}</span>`)}),d}function o(t){if(t.productId){let i=e(t.productId);i&&(t.productName||(t.productName=i.name),i.price&&!t.discountedPrice&&(t.discountedPrice=i.price))}return t.productName?t.discountedPrice?t:(console.error("Order bump missing discountedPrice:",t),null):(console.error("Order bump missing productName:",t),null)}function a(e,t){let i=window.cartConfig.orderBumps[e];if(!i||!i.productId)return console.warn(`Order bump ${e} tidak mempunyai productId`),!1;let n=document.querySelector(`.product[data-id="${i.productId}"]`);if(!n)return console.warn(`Product dengan ID ${i.productId} tidak dijumpai`),!1;let r=n.querySelector("select.quantity");return!!r&&(r.dataset.fromBump="true","undefined"!=typeof $&&$.fn.select2?($(r).val(t.toString()),$(r).trigger("change.select2"),setTimeout(()=>{let e=new Event("input",{bubbles:!0});r.dispatchEvent(e)},50)):(r.value=t.toString(),r.dispatchEvent(new Event("change",{bubbles:!0})),r.dispatchEvent(new Event("input",{bubbles:!0}))),window.cartConfig.debugMode&&console.log(`✅ Product ${i.productId} (${i.productName}) quantity set to: ${t}`),!0)}function c(){let e=window.cartConfig.orderBumpsLocation,t=null,i="beforebegin";switch(e.position){case"before-payment":default:t=document.getElementById("payment-section"),i="beforebegin";break;case"after-products":t=document.querySelector(".table.table-condensed.purchase_details:not(.table-hover)"),i="afterend";break;case"before-customer":t=document.querySelector("h2.section-header"),i="beforebegin";break;case"custom":t=document.querySelector(e.customSelector),i=e.insertMethod||"afterend"}return t||(console.error(`❌ Order bump target element not found for position: ${e.position}`),t=document.getElementById("payment-section"),i="beforebegin"),window.cartConfig.debugMode&&console.log(`📍 Order bump insert target:`,{position:e.position,element:t,method:i}),{targetElement:t,insertMethod:i}}function d(e){let t=document.querySelector(`.product[data-id="${e}"]`);if(!t)return 0;let i=t.querySelector("select.quantity");return i&&parseInt(i.value)||0}function l(){let e=document.querySelector(".total-quantity");return e&&parseInt(e.textContent)||0}function u(e){if(!e.conditions||!e.conditions.type)return!0;let t=e.conditions.type,i=!0,n=!0;if("total"===t||"both"===t){let r=l(),o=e.conditions.minTotalQuantity||1;i=r>=o,window.cartConfig.debugMode&&console.log(`📊 Total check: ${r} >= ${o} = ${i}`)}if(("product"===t||"both"===t)&&e.conditions.requiredProduct){let a=e.conditions.requiredProduct,c=d(a.id),u=a.minQuantity||1;n=c>=u,window.cartConfig.debugMode&&console.log(`📦 Product ${a.id} check: ${c} >= ${u} = ${n}`)}return"both"===t?i&&n:"total"===t?i:"product"!==t||n}function s(){window.cartConfig.orderBumps.forEach((t,i)=>{t.enabled&&function t(i){let n=window.cartConfig.orderBumps[i];if(!n||!n.enabled)return;let r=document.querySelector(`.order-bump-container[data-bump-index="${i}"]`);if(!r)return;let o=function e(t){let i={met:!0,hasStarted:!1,remainingTotal:0,remainingProduct:0};if(!t.conditions||!t.conditions.type)return i;let n=t.conditions.type;if("total"===n||"both"===n){let r=l(),o=t.conditions.minTotalQuantity||1;r>0&&(i.hasStarted=!0),r<o&&(i.met=!1,i.remainingTotal=o-r)}if(("product"===n||"both"===n)&&t.conditions.requiredProduct){let a=t.conditions.requiredProduct,c=d(a.id),u=a.minQuantity||1;c>0&&(i.hasStarted=!0),c<u&&(i.met=!1,i.remainingProduct=u-c)}return i}(n),a=o.met,u=o.hasStarted;if(!function t(i,n){if(!window.cartConfig.notifications.enabled)return;let r=window.cartConfig.orderBumps[i];if(!r||!r.conditions||!r.conditions.type)return;let o=`bump-notification-${i}`,a=document.getElementById(o),d=document.querySelector(`.order-bump-container[data-bump-index="${i}"]`);if(n.met){if(a){if(window.cartConfig.notifications.showSuccessMessage){let l=window.cartConfig.notifications.messages[r.conditions.type].success,u=l.replace(/{bumpName}/g,r.productName||"order bump");a.className="order-bump-notification success",a.innerHTML=`
                    <div class="order-bump-notification-content">
                        <div class="order-bump-notification-icon">
                            <i class="fa fa-check"></i>
                        </div>
                        <div class="order-bump-notification-text">
                            <div class="order-bump-notification-message">${u}</div>
                        </div>
                    </div>
                `,setTimeout(()=>{a&&a.parentNode&&(a.style.animation="slideInNotification 0.3s ease reverse",setTimeout(()=>{a&&a.parentNode&&a.remove()},300))},5e3)}else a&&a.parentNode&&a.remove()}return}if(!n.met&&n.hasStarted){let s=r.conditions.type,p=window.cartConfig.notifications.messages[s].pending;if("total"===s)p=p.replace(/{remaining}/g,n.remainingTotal);else if("product"===s){let f=e(r.conditions.requiredProduct.id);p=p.replace(/{productName}/g,f?f.name:"produk").replace(/{remaining}/g,n.remainingProduct).replace(/{bumpName}/g,r.productName)}else if("both"===s){let m=e(r.conditions.requiredProduct.id);p=p.replace(/{remainingTotal}/g,n.remainingTotal).replace(/{productName}/g,m?m.name:"produk").replace(/{remainingProduct}/g,n.remainingProduct)}if(!a){if((a=document.createElement("div")).id=o,a.className="order-bump-notification",d)d.insertAdjacentElement("beforebegin",a);else{let{targetElement:b,insertMethod:g}=c();b&&b.insertAdjacentElement("beforebegin"===g?"beforebegin":"afterend",a)}}a.innerHTML=`
            <div class="order-bump-notification-content">
                <div class="order-bump-notification-icon">
                    <i class="fa fa-gift"></i>
                </div>
                <div class="order-bump-notification-text">
                    <div class="order-bump-notification-message">${p}</div>
                </div>
            </div>
        `}else a&&a.parentNode&&a.remove()}(i,o),u||a){r.style.display="block";let s=r.querySelector(".order-bump-input"),p=r.querySelector(".order-bump-quantity-wrapper");a?(r.classList.remove("disabled"),s&&(s.disabled=!1),window.cartConfig.debugMode&&console.log(`✅ Order bump ${i} ENABLED (conditions met)`)):(r.classList.add("disabled"),s&&(s.disabled=!0,s.checked=!1),p&&(p.style.display="none"),window.cartConfig.debugMode&&console.log(`🔒 Order bump ${i} shown but DISABLED (conditions not met)`))}else r.style.display="none",window.cartConfig.debugMode&&console.log(`🙈 Order bump ${i} hidden (user hasn't started ordering)`)}(i)})}document.addEventListener("DOMContentLoaded",function(){!function e(){if(!window.cartConfig){console.error("cartConfig not found! Please define window.cartConfig before loading this script.");return}!function e(){let t=`
        <div class="cart-container">
            <div class="left-section">
                <i class="fa fa-shopping-cart" id="cartQty" data-count="0"></i>
                <span class="cart-total">0.00</span>
            </div>
            <div class="right-section">
                <button id="cart-toggle-btn">
                    <span class="toggle-btn-txt">TEMPAH SEKARANG</span>
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div id="form-overlay"></div>
    `;document.body.insertAdjacentHTML("beforeend",t)}();let t=document.getElementById("form"),i=document.getElementById("cart-toggle-btn"),n=document.getElementById("cartQty"),r=document.getElementById("form-overlay");function o(){let e=document.querySelector(".total-quantity");if(e){let t=parseInt(e.textContent)||0;n.setAttribute("data-count",t)}}i.addEventListener("click",function(){t.classList.toggle("active"),i.classList.toggle("active"),r.classList.toggle("active")}),r.addEventListener("click",function(){t.classList.remove("active"),i.classList.remove("active"),r.classList.remove("active")});let a=document.querySelector(".total-quantity");if(a){o();let c=new MutationObserver(o);c.observe(a,{childList:!0,characterData:!0,subtree:!0})}function d(){let e=document.querySelector(".total-amount"),t=document.querySelector(".cart-total");if(e&&t){let i=e.textContent.trim();t.textContent=i}}let l=document.querySelector(".total-amount");if(l){d();let u=new MutationObserver(d);u.observe(l,{childList:!0,characterData:!0,subtree:!0})}document.querySelectorAll('input[type="radio"]').forEach(e=>{let t=document.createElement("div");t.className="checkbox-custom",e.insertAdjacentElement("afterend",t)})}();let e=document.querySelector(".toggle-btn-txt");e&&(e.textContent=window.cartConfig.cartButton.text);let i=document.querySelector(".cart-total");if(i&&"before"===window.cartConfig.currency.position)i.style.setProperty("--currency-symbol",`"${window.cartConfig.currency.symbol}"`);else if(i&&"after"===window.cartConfig.currency.position){let n=document.createElement("style");n.textContent=`
            .left-section .cart-total::before { content: none !important; }
            .left-section .cart-total::after { content: "${window.cartConfig.currency.symbol}"; margin-left: 2px; }
        `,document.head.appendChild(n)}let d=document.getElementById("form");d&&!d.classList.contains("active")&&(d.style.visibility="hidden",setTimeout(function(){d.style.visibility="visible"},200)),window.cartConfig.orderBumps.forEach((e,t)=>{e.enabled&&e.productId&&function e(t){let i=document.querySelector(`.product[data-id="${t}"]`);i&&(i.style.visibility="collapse",i.style.opacity="0",window.cartConfig.debugMode&&console.log(`🙈 Product ${t} hidden from table`))}(e.productId)}),function e(){let t=document.querySelectorAll(".product select.quantity");t.forEach(e=>{"undefined"!=typeof $&&$.fn.select2&&$(e).on("change.select2",function(){setTimeout(()=>{s()},100)}),e.addEventListener("change",function(){setTimeout(()=>{s()},100)}),e.addEventListener("input",function(){setTimeout(()=>{s()},100)})});let i=document.querySelector(".total-quantity");if(i){let n=new MutationObserver(()=>{s()});n.observe(i,{childList:!0,characterData:!0,subtree:!0}),window.cartConfig.debugMode&&console.log("\uD83D\uDC40 Quantity monitoring setup complete")}}();let{targetElement:l,insertMethod:u}=c();l&&(window.cartConfig.orderBumps.forEach((e,i)=>{if(!e.enabled)return;let n=o(e);if(!n){console.error(`Order bump ${i} skipped due to invalid config`);return}let a=r(n.title,n),c=r(n.description,n),d=`order-bump-${i}`,s=`
                <div class="order-bump-container" data-bump-index="${i}">
                    <div class="order-bump-badge">
                        <i class="fa ${n.badgeIcon}"></i> ${n.badgeText}
                    </div>
                    <div class="order-bump-content">
                        <label class="order-bump-checkbox">
                            <input type="checkbox" id="${d}-checkbox" class="order-bump-input" value="1" data-bump-index="${i}">
                            <span class="checkmark"></span>
                            <div class="order-bump-text">
                                <div class="order-bump-title">${a}</div>
                                <div class="order-bump-description">${c}</div>
                            </div>
                        </label>
                        <div class="order-bump-quantity-wrapper" id="${d}-quantity-wrapper" style="display: none;">
                            <div class="bump-quantity-left">
                                <div class="quantity-label">${n.quantityLabel}</div>
                                <div class="quantity-selector">
                                    <button type="button" class="qty-btn qty-minus" data-bump-index="${i}">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                    <input type="number" class="qty-input" id="${d}-qty-input" value="${n.defaultQuantity}" min="${n.minQuantity}" max="${n.maxQuantity}" readonly data-bump-index="${i}">
                                    <button type="button" class="qty-btn qty-plus" data-bump-index="${i}">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="quantity-total">
                                <span class="bump-total-price" id="${d}-total-price">${t(n.discountedPrice)}</span>
                            </div>
                        </div>
                    </div>
                </div>
            `;l.insertAdjacentHTML(u,s)}),setTimeout(()=>{document.querySelectorAll(".order-bump-input").forEach(e=>{let i=parseInt(e.getAttribute("data-bump-index")),n=o(window.cartConfig.orderBumps[i]);if(!n)return;let r=`order-bump-${i}`,c=document.getElementById(`${r}-quantity-wrapper`),d=document.getElementById(`${r}-qty-input`),l=document.getElementById(`${r}-total-price`),u=document.querySelector(`.qty-minus[data-bump-index="${i}"]`),s=document.querySelector(`.qty-plus[data-bump-index="${i}"]`);function p(){let r=parseInt(d.value)||1,o=n.discountedPrice*r;l.textContent=t(o),e.checked&&a(i,r),window.cartConfig.debugMode&&console.log(`Order bump ${i} total: ${t(o)}`)}function f(){let e=parseInt(d.value)||1;u&&(u.disabled=e<=n.minQuantity),s&&(s.disabled=e>=n.maxQuantity)}f(),e.addEventListener("change",function(){if(this.checked){c.style.display="flex";let e=parseInt(d.value)||n.defaultQuantity;if(setTimeout(()=>{a(i,e)},100),p(),n.productId){let t=parseInt(d.value)||n.defaultQuantity;!function e(t,i){let n=document.querySelector(`.product[data-id="${t}"]`);if(n){n.style.visibility="visible",n.style.opacity="1";let r=n.querySelector("td:first-child");if(r&&!r.querySelector(".order-bump-badge-table")){let o=document.createElement("span");o.className="order-bump-badge-table",o.textContent=window.cartConfig.bumpsBadge.text,r.insertBefore(o,r.firstChild),r.insertBefore(document.createTextNode(" "),o.nextSibling)}let a=n.querySelector(".quantity");a&&(a.disabled=!0,a.style.opacity="0.6",a.style.cursor="not-allowed"),window.cartConfig.debugMode&&console.log(`👁️ Product ${t} shown as Order Bump`)}}(n.productId,t)}window.cartConfig.debugMode&&console.log(`✅ Order bump ${i} selected:`,n.productName)}else{var r;c.style.display="none",a(r=i,0),n.productId&&function e(t){let i=document.querySelector(`.product[data-id="${t}"]`);if(i){i.style.visibility="collapse",i.style.opacity="0";let n=i.querySelector(".order-bump-badge-table");if(n){n.remove();let r=i.querySelector("td:first-child").childNodes[0];r&&3===r.nodeType&&""===r.textContent.trim()&&r.remove()}let o=i.querySelector(".quantity");o&&(o.disabled=!1,o.style.opacity="1",o.style.cursor="pointer"),window.cartConfig.debugMode&&console.log(`🔄 Product ${t} reset and hidden`)}}(n.productId),window.cartConfig.debugMode&&console.log(`❌ Order bump ${i} deselected`)}}),u&&u.addEventListener("click",function(e){e.preventDefault();let t=parseInt(d.value)||1;t>n.minQuantity&&(d.value=t-1,p(),f())}),s&&s.addEventListener("click",function(e){e.preventDefault();let t=parseInt(d.value)||1;t<n.maxQuantity&&(d.value=t+1,p(),f())}),d&&d.addEventListener("change",function(){let e=parseInt(this.value)||1;e<n.minQuantity&&(e=n.minQuantity),e>n.maxQuantity&&(e=n.maxQuantity),this.value=e,p(),f()})}),s()},500),window.cartConfig.debugMode&&console.log("\uD83C\uDF81 Order Bumps loaded:",window.cartConfig.orderBumps.filter(e=>e.enabled).length,"active"))})}();
